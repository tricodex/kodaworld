:root {
    --bg-color: #e0f7fa;
    --bg-color-light: #b2ebf2;
    --box-shadow-color: rgba(0, 0, 0, 0.15);
    --text-color-hover: #1c988a;
    --primary-color: #ffd700;
    --secondary-color: #333;
    --accent-color: #ff4500;
    --text-color: #ffffff;
    --border-color: #ffd700;
    --hover-color: #ffea00;
    --invalid-color: rgba(255, 0, 0, 0.3);
    --selected-color: rgba(255, 215, 0, 0.3);
    --overlay-color: rgba(0, 0, 0, 0.7);
  }
  
  /* General Styles */
  body {
    margin: 0;
    padding: 0;
    font-family: 'Arial', sans-serif;
    color: var(--text-color);
  }
  
  /* Game Container */
  .game-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;
    background-image: url('/backgrounds/puzzle.webp');
    background-size: cover;
    background-position: center;
    overflow: hidden;
  }
  
  /* Game Board */
  .game-board-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: var(--overlay-color);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 20px var(--box-shadow-color);
  }
  
  .game-board {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    gap: 2px;
    background: var(--secondary-color);
    border: 2px solid var(--border-color);
    width: 300px;
    height: 300px;
    margin-bottom: 20px;
  }
  
  .grid-cell {
    border: 1px solid var(--border-color);
    position: relative;
    transition: all 0.3s ease;
  }
  
  .grid-cell.selected {
    background: var(--selected-color);
    transform: scale(1.05);
    z-index: 1;
  }
  
  .grid-cell.invalid {
    background: var(--invalid-color);
  }
  
  /* Pieces */
  .piece {
    position: absolute;
    width: 100%;
    height: 100%;
    display: grid;
    transition: all 0.3s ease;
  }
  
  .piece-cell {
    border: 1px solid rgba(255, 255, 255, 0.3);
  }
  
  .piece-preview {
    width: 60px;
    height: 60px;
    margin: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .piece-preview:hover {
    transform: scale(1.1);
  }
  
  .piece-preview.selected {
    border: 2px solid var(--text-color);
    box-shadow: 0 0 10px var(--primary-color);
  }
  
  /* Info Panel */
  .info-panel {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 250px;
    padding: 20px;
    background: var(--overlay-color);
    border-radius: 10px;
    margin-left: 20px;
  }
  
  .game-title {
    font-size: 24px;
    font-weight: bold;
    text-align: center;
    margin-bottom: 20px;
    color: var(--primary-color);
  }
  
  .game-stats {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
  }
  
  .stat-item {
    text-align: center;
  }
  
  .stat-value {
    font-size: 24px;
    font-weight: bold;
    color: var(--primary-color);
  }
  
  .stat-label {
    font-size: 12px;
    text-transform: uppercase;
  }
  
  .instructions {
    margin-bottom: 20px;
    padding: 10px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 5px;
  }
  
  .instructions h3 {
    margin-top: 0;
    color: var(--primary-color);
  }
  
  .instructions p {
    margin: 5px 0;
    font-size: 14px;
  }
  
  .available-pieces {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 20px;
  }
  
  /* Button */
  .button {
    background: var(--primary-color);
    color: var(--secondary-color);
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    border-radius: 5px;
    transition: all 0.3s ease;
  }
  
  .button:hover {
    background: var(--hover-color);
    transform: translateY(-2px);
    box-shadow: 0 5px 10px var(--box-shadow-color);
  }
  
  .button:active {
    transform: translateY(0);
    box-shadow: 0 2px 5px var(--box-shadow-color);
  }
  
  /* Animations */
  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }
  
  .pulse {
    animation: pulse 1s infinite;
  }
  
  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  .rotate {
    animation: rotate 2s linear infinite;
  }