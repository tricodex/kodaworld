@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap');

@property --value { syntax: "<angle>"; inherits: true; initial-value: 0deg; }
@property --value-reverse { syntax: "<angle>"; inherits: true; initial-value: 360deg; }
@property --width-ratio { syntax: "<number>"; inherits: true; initial-value: 0; }
@property --scale { syntax: "<number>"; inherits: true; initial-value: 0; }

:root {
  --width: 0.5vmin;
  --duration: 10s;
  --button-size: 100px;
  --ring-size: 200px;
}

body { margin: 0; background: #000; font-family: Arial, sans-serif; color: #fff; overflow-x: hidden; }

.solar-system { display: flex; flex-direction: column; align-items: center; min-height: 100vh; padding: 20px; }

.title { font-family: 'Orbitron', sans-serif; font-size: 3rem; font-weight: bold; margin-bottom: 2rem; text-align: center; color: #ffd700; text-shadow: 0 0 10px #ffd700, 0 0 20px #ffd700, 0 0 30px #ffd700; }

.solar-system-info { max-width: 800px; margin-bottom: 2rem; padding: 20px; background: rgba(255, 255, 255, 0.1); border-radius: 10px; box-shadow: 0 0 10px rgba(255, 215, 0, 0.3); line-height: 1.6; }
.solar-system-info h2 { color: #ffd700; font-family: 'Orbitron', sans-serif; text-align: center; margin-bottom: 1rem; }
.solar-system-info ul { list-style-type: none; padding-left: 0; }
.solar-system-info li::before { content: "â€¢"; color: #ffd700; display: inline-block; width: 1em; margin-left: -1em; }

.scale-model { display: flex; align-items: flex-end; justify-content: center; margin-bottom: 2rem; padding: 20px; background: rgba(255, 255, 255, 0.05); border-radius: 10px; }
.scale-planet { display: flex; flex-direction: column; align-items: center; margin: 0 5px; }
.scale-planet::before { content: ''; width: var(--planet-size); height: var(--planet-size); background: var(--planet-gradient); border-radius: 50%; }
.planet-name, .planet-size { font-size: 10px; text-align: center; margin-top: 5px; }

.planets-container { display: flex; flex-wrap: wrap; justify-content: center; align-items: center; }

.button-container { position: relative; width: var(--ring-size); height: var(--ring-size); display: flex; justify-content: center; align-items: center; margin: 20px; }

.central-button { position: relative; width: var(--button-size); height: var(--button-size); border: none; border-radius: 50%; color: white; font-size: 14px; font-weight: bold; cursor: pointer; z-index: 10; transition: all 0.3s ease; overflow: hidden; text-decoration: none; display: flex; justify-content: center; align-items: center; }
.central-button::before { content: ""; position: absolute; inset: 0; background: var(--planet-gradient); border-radius: 50%; animation: rotate 20s linear infinite; }
.central-button.has-ring::after { content: ""; position: absolute; top: 50%; left: 50%; width: 140%; height: 40px; background: linear-gradient(to right, transparent 10%, #ffd700 50%, transparent 90%); transform: translate(-50%, -50%) rotate3d(1, 0, 0, 75deg); opacity: 0.7; border-radius: 50%; pointer-events: none; }

.rings, .rings-reverse { position: absolute; width: var(--ring-size); height: var(--ring-size); border-radius: 50%; filter: url(#blurFilter); }
.rings::before, .rings::after, .rings-reverse::before, .rings-reverse::after { content: ""; position: absolute; inset: 0; border-radius: 50%; --width-ratio: 1; border: calc(var(--width) * var(--width-ratio)) solid transparent; mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0); mask-composite: exclude; --start: 180deg; --scale: 1; }
.rings::before, .rings::after { background: conic-gradient(from calc(var(--value) * 3), var(--ring-colors)) border-box; animation: enhanced-ring var(--duration) ease-in-out infinite; --value: var(--start); transform: rotateY(var(--value)) rotateX(var(--value)) rotateZ(var(--value)) scale(var(--scale)); }
.rings-reverse::before, .rings-reverse::after { background: conic-gradient(from calc(var(--value-reverse) * 3), var(--ring-colors-reverse)) border-box; animation: enhanced-ring-reverse var(--duration) ease-in-out infinite; --value-reverse: calc(360deg - var(--start)); transform: rotateY(var(--value-reverse)) rotateX(var(--value-reverse)) rotateZ(var(--value-reverse)) scale(var(--scale)); }
.rings::before, .rings-reverse::before { --start: 180deg; }
.rings::after, .rings-reverse::after { --start: 90deg; }

@keyframes enhanced-ring { 0%, 100% { --value: var(--start); --scale: 1; --width-ratio: 1; } 25%, 75% { --scale: 1.2; --width-ratio: 1.5; } 50% { --scale: 1; --value: calc(var(--start) + 180deg); --width-ratio: 1; } }
@keyframes enhanced-ring-reverse { 0%, 100% { --value-reverse: calc(360deg - var(--start)); --scale: 1; --width-ratio: 1; } 25%, 75% { --scale: 1.1; --width-ratio: 1.3; } 50% { --scale: 1; --value-reverse: calc(180deg - var(--start)); --width-ratio: 1; } }
@keyframes rotate { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }